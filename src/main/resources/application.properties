# The Tomcat connector configured to listen on port 8081.
server.port=8081

# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection

# DataSource:
spring.datasource.sql-script-encoding=UTF-8
spring.datasource.initialization-mode=ALWAYS
#spring.datasource.driverClassName=org.h2.Driver

# H2:
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console

# MySQL:
spring.jpa.database=MYSQL
spring.datasource.platform=MYSQL
#spring.datasource.url=jdbc:mysql://localhost:3306/iotenergymeterapi?createDatabaseIfNotExist=TRUE&autoReconnect=TRUE&useSSL=FALSE&allowPublicKeyRetrieval=TRUE&useUnicode=YES&characterEncoding=UTF-8
#spring.datasource.username=root
#spring.datasource.password=@Hacker101
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Docker:
!spring.datasource.url=jdbc:mysql://127.0.0.1:3306/iotenergymeterapi?createDatabaseIfNotExist=TRUE&autoReconnect=TRUE&useSSL=FALSE&allowPublicKeyRetrieval=TRUE&useUnicode=YES&characterEncoding=UTF-8
!spring.datasource.username=root
!spring.datasource.password=@Hacker101
#
spring.datasource.url=jdbc:mysql://mysql-iotenergymeter:3306/iotenergymeterapi?createDatabaseIfNotExist=TRUE&autoReconnect=TRUE&useSSL=FALSE&allowPublicKeyRetrieval=TRUE&useUnicode=YES&characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=Hacker101

# PostgreSQL:
# spring.jpa.database=POSTGRESQL
# spring.datasource.platform=postgres
# spring.datasource.url=jdbc:postgresql://localhost:5432/iotenergymeterapi?createDatabaseIfNotExist=TRUE&autoReconnect=TRUE&useSSL=FALSE&allowPublicKeyRetrieval=TRUE&useUnicode=YES&characterEncoding=UTF-8
# spring.datasource.username=postgres
# spring.datasource.password=@Hacker101
# spring.datasource.driver-class-name=org.postgresql.Driver

# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
spring.jpa.open-in-view=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
# spring.jpa.hibernate.ddl-auto=create-drop
# Allows Hibernate to generate SQL optimized for a particular DBMS
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# MySQL Versao 5:
# spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
# MySQL Versao 8:
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect

! spring.jackson para tratar objeto em json e vice-versa.
! Causing a failure if you have undue arguments in the representation sent.
! Arguments unknown or that the bank did not expect. The default is false.
spring.jackson.deserialization.fail-on-unknown-properties=true

! To modify the date pattern in the JSON representation.
spring.jackson.date-format=yyyy-MM-dd

# ===============================
# = Security / HTTPS
# ===============================
! @EnableConfigurationProperties(IoTEnergyMeterApplication.class)
! Enable or Disable HTTP Security for Development or Production.
! Default == false (then not needing the line).
! Because the Default is false, for Production, the file "application-prod.properties" was created.
! iotenergymeter.security.enable-https=false

# ===============================
# = Security / ORIGIN ALLOWED
# ===============================
! iotenergymeter.origin-allowed=https://localhost:8000
